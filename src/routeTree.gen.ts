/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateLayoutImport } from './routes/_private/layout'
import { Route as PrivatePageImport } from './routes/_private/page'
import { Route as PrivatePaymentsPageImport } from './routes/_private/payments.page'
import { Route as PrivateDashboardPageImport } from './routes/_private/dashboard.page'
import { Route as PrivateCitiesPageImport } from './routes/_private/cities/page'
import { Route as PrivateAdminPageImport } from './routes/_private/admin.page'
import { Route as publicRegisterPageImport } from './routes/(public)/register.page'
import { Route as publicLoginPageImport } from './routes/(public)/login/page'

// Create/Update Routes

const PrivateLayoutRoute = PrivateLayoutImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const PrivatePageRoute = PrivatePageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

const PrivatePaymentsPageRoute = PrivatePaymentsPageImport.update({
  id: '/payments/',
  path: '/payments/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

const PrivateDashboardPageRoute = PrivateDashboardPageImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

const PrivateCitiesPageRoute = PrivateCitiesPageImport.update({
  id: '/cities/',
  path: '/cities/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

const PrivateAdminPageRoute = PrivateAdminPageImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

const publicRegisterPageRoute = publicRegisterPageImport.update({
  id: '/(public)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const publicLoginPageRoute = publicLoginPageImport.update({
  id: '/(public)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_private/': {
      id: '/_private/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivatePageImport
      parentRoute: typeof PrivateLayoutImport
    }
    '/(public)/login/': {
      id: '/(public)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof publicLoginPageImport
      parentRoute: typeof rootRoute
    }
    '/(public)/register/': {
      id: '/(public)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof publicRegisterPageImport
      parentRoute: typeof rootRoute
    }
    '/_private/admin/': {
      id: '/_private/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof PrivateAdminPageImport
      parentRoute: typeof PrivateLayoutImport
    }
    '/_private/cities/': {
      id: '/_private/cities/'
      path: '/cities'
      fullPath: '/cities'
      preLoaderRoute: typeof PrivateCitiesPageImport
      parentRoute: typeof PrivateLayoutImport
    }
    '/_private/dashboard/': {
      id: '/_private/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardPageImport
      parentRoute: typeof PrivateLayoutImport
    }
    '/_private/payments/': {
      id: '/_private/payments/'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PrivatePaymentsPageImport
      parentRoute: typeof PrivateLayoutImport
    }
  }
}

// Create and export the route tree

interface PrivateLayoutRouteChildren {
  PrivatePageRoute: typeof PrivatePageRoute
  PrivateAdminPageRoute: typeof PrivateAdminPageRoute
  PrivateCitiesPageRoute: typeof PrivateCitiesPageRoute
  PrivateDashboardPageRoute: typeof PrivateDashboardPageRoute
  PrivatePaymentsPageRoute: typeof PrivatePaymentsPageRoute
}

const PrivateLayoutRouteChildren: PrivateLayoutRouteChildren = {
  PrivatePageRoute: PrivatePageRoute,
  PrivateAdminPageRoute: PrivateAdminPageRoute,
  PrivateCitiesPageRoute: PrivateCitiesPageRoute,
  PrivateDashboardPageRoute: PrivateDashboardPageRoute,
  PrivatePaymentsPageRoute: PrivatePaymentsPageRoute,
}

const PrivateLayoutRouteWithChildren = PrivateLayoutRoute._addFileChildren(
  PrivateLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PrivateLayoutRouteWithChildren
  '/': typeof PrivatePageRoute
  '/login': typeof publicLoginPageRoute
  '/register': typeof publicRegisterPageRoute
  '/admin': typeof PrivateAdminPageRoute
  '/cities': typeof PrivateCitiesPageRoute
  '/dashboard': typeof PrivateDashboardPageRoute
  '/payments': typeof PrivatePaymentsPageRoute
}

export interface FileRoutesByTo {
  '/': typeof PrivatePageRoute
  '/login': typeof publicLoginPageRoute
  '/register': typeof publicRegisterPageRoute
  '/admin': typeof PrivateAdminPageRoute
  '/cities': typeof PrivateCitiesPageRoute
  '/dashboard': typeof PrivateDashboardPageRoute
  '/payments': typeof PrivatePaymentsPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_private': typeof PrivateLayoutRouteWithChildren
  '/_private/': typeof PrivatePageRoute
  '/(public)/login/': typeof publicLoginPageRoute
  '/(public)/register/': typeof publicRegisterPageRoute
  '/_private/admin/': typeof PrivateAdminPageRoute
  '/_private/cities/': typeof PrivateCitiesPageRoute
  '/_private/dashboard/': typeof PrivateDashboardPageRoute
  '/_private/payments/': typeof PrivatePaymentsPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/register'
    | '/admin'
    | '/cities'
    | '/dashboard'
    | '/payments'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/admin'
    | '/cities'
    | '/dashboard'
    | '/payments'
  id:
    | '__root__'
    | '/_private'
    | '/_private/'
    | '/(public)/login/'
    | '/(public)/register/'
    | '/_private/admin/'
    | '/_private/cities/'
    | '/_private/dashboard/'
    | '/_private/payments/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PrivateLayoutRoute: typeof PrivateLayoutRouteWithChildren
  publicLoginPageRoute: typeof publicLoginPageRoute
  publicRegisterPageRoute: typeof publicRegisterPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  PrivateLayoutRoute: PrivateLayoutRouteWithChildren,
  publicLoginPageRoute: publicLoginPageRoute,
  publicRegisterPageRoute: publicRegisterPageRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_private",
        "/(public)/login/",
        "/(public)/register/"
      ]
    },
    "/_private": {
      "filePath": "_private/layout.tsx",
      "children": [
        "/_private/",
        "/_private/admin/",
        "/_private/cities/",
        "/_private/dashboard/",
        "/_private/payments/"
      ]
    },
    "/_private/": {
      "filePath": "_private/page.tsx",
      "parent": "/_private"
    },
    "/(public)/login/": {
      "filePath": "(public)/login/page.tsx"
    },
    "/(public)/register/": {
      "filePath": "(public)/register.page.tsx"
    },
    "/_private/admin/": {
      "filePath": "_private/admin.page.tsx",
      "parent": "/_private"
    },
    "/_private/cities/": {
      "filePath": "_private/cities/page.tsx",
      "parent": "/_private"
    },
    "/_private/dashboard/": {
      "filePath": "_private/dashboard.page.tsx",
      "parent": "/_private"
    },
    "/_private/payments/": {
      "filePath": "_private/payments.page.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
